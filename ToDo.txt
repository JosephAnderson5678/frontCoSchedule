

1. Once UUID/URI is fixed update sending that in where needed in search by author and search by title.

2. possibility to combine initial review component with update because they have so much in common. Would this help maintainability or is it not worth doing that way? I could
code it either way, but just comes down to senior engineers opinion. Right now it is its own seperate feature, but that is a lot of extra code to maintain. 

3. Code it so when the user updates the review it automatically displays the new review. This means make an API call for the new details by using the fact we have an ID system 
once a book has finished being reviewed.  This also means changing the app.js routes to use :id and the way things are sent in. This is a major rework, but worth it long term. 
Not a high priority right now.
4. Datagrid from material UI to display it another way if the user wants it that way. <--- requires get by ID to be working first. 

5. fix that a text field is misaligned.

6. test out longer review messages. 

7. Add security with OAuth.



